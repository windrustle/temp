<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1768251">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="uniq" elementType="Argument">
            <stringProp name="Argument.name">uniq</stringProp>
            <stringProp name="Argument.value">/jmeter.${__time(yyyy-MM-dd_HH-mm-ss)}.${__strReplace(${__TestPlanName},(.+?)\..*,$1,)}.${__strReplace(${__machineName},(.+?)\..*,$1,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">nt01.dom.test.gosuslugi.ru</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">10082</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="randomIntegration" elementType="Argument">
            <stringProp name="Argument.name">randomIntegration</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="constantIntegration" elementType="Argument">
            <stringProp name="Argument.name">constantIntegration</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pacingIntegration" elementType="Argument">
            <stringProp name="Argument.name">pacingIntegration</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://${host}</stringProp>
            <stringProp name="Authorization.username">lanit</stringProp>
            <stringProp name="Authorization.password">tv,n8!Ya</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${host}</stringProp>
            <stringProp name="Authorization.username">lanit</stringProp>
            <stringProp name="Authorization.password">tv,n8!Ya</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://my.${host}</stringProp>
            <stringProp name="Authorization.username">lanit</stringProp>
            <stringProp name="Authorization.password">tv,n8!Ya</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://idp.nt.dks.lanit.ru</stringProp>
            <stringProp name="Authorization.username">test</stringProp>
            <stringProp name="Authorization.password">eCXn2u@z</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://api.${host}</stringProp>
            <stringProp name="Authorization.username">lanit</stringProp>
            <stringProp name="Authorization.password">tv,n8!Ya</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
      </AuthManager>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF UC03 paymentDocument" enabled="true"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_UC03.paymentDocument" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="TA thinktime" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantIntegration}</stringProp>
              <stringProp name="RandomTimer.range">${randomIntegration}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC03.paymentDocument.import" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:base=&quot;http://dom.gosuslugi.ru/schema/integration/base/&quot; xmlns:bil=&quot;http://dom.gosuslugi.ru/schema/integration/bills/&quot; xmlns:pay=&quot;http://dom.gosuslugi.ru/schema/integration/payments-base/&quot; xmlns:acc=&quot;http://dom.gosuslugi.ru/schema/integration/account-base/&quot; xmlns:bil1=&quot;http://dom.gosuslugi.ru/schema/integration/bills-base/&quot; xmlns:nsi=&quot;http://dom.gosuslugi.ru/schema/integration/nsi-base/&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;base:RequestHeader&gt;&#xd;
			&lt;base:Date&gt;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss.SXXX)}&lt;/base:Date&gt;&#xd;
			&lt;base:MessageGUID&gt;${__UUID}&lt;/base:MessageGUID&gt;&#xd;
			&lt;!--&lt;base:SenderID&gt;?&lt;/base:SenderID&gt;--&gt;&#xd;
			&lt;base:orgPPAGUID&gt;5bc377ea-1f6f-4473-8af8-e5b130290b3e&lt;/base:orgPPAGUID&gt;&#xd;
			&lt;base:IsOperatorSignature&gt;true&lt;/base:IsOperatorSignature&gt;&#xd;
		&lt;/base:RequestHeader&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;bil:importPaymentDocumentRequest base:version=&quot;10.0.1.1&quot;&gt;&#xd;
			&lt;base:Month&gt;01&lt;/base:Month&gt;&#xd;
			&lt;base:Year&gt;2017&lt;/base:Year&gt;&#xd;
			&lt;bil:PaymentInformation&gt;&#xd;
				&lt;pay:BankBIK&gt;040173725&lt;/pay:BankBIK&gt;&#xd;
				&lt;pay:operatingAccountNumber&gt;65487987987987985455&lt;/pay:operatingAccountNumber&gt;&#xd;
				&lt;base:TransportGUID&gt;${guid}&lt;/base:TransportGUID&gt;&#xd;
			&lt;/bil:PaymentInformation&gt;&#xd;
			&lt;bil:PaymentDocument&gt;&#xd;
				&lt;acc:AccountGuid&gt;${aguid}&lt;/acc:AccountGuid&gt;&#xd;
				&lt;!--&lt;bil1:PaymentDocumentNumber&gt;?&lt;/bil1:PaymentDocumentNumber&gt;--&gt;&#xd;
				&lt;bil:AddressInfo&gt;&#xd;
					&lt;bil:LivingPersonsNumber&gt;1&lt;/bil:LivingPersonsNumber&gt;&#xd;
					&lt;bil:ResidentialSquare&gt;100&lt;/bil:ResidentialSquare&gt;&#xd;
					&lt;!--&lt;bil:HeatedArea&gt;33&lt;/bil:HeatedArea&gt;--&gt;&#xd;
					&lt;bil:TotalSquare&gt;100&lt;/bil:TotalSquare&gt;&#xd;
				&lt;/bil:AddressInfo&gt;&#xd;
				&lt;bil:ChargeInfo&gt;&#xd;
					&lt;bil:HousingService&gt;&#xd;
						&lt;bil:ServiceType&gt;&#xd;
							&lt;nsi:Code&gt;1&lt;/nsi:Code&gt;&#xd;
							&lt;nsi:GUID&gt;510ed4d6-cf55-4fc1-939a-1c642afe982c&lt;/nsi:GUID&gt;&#xd;
							&lt;nsi:Name&gt;Плата за содержание жилого помещения&lt;/nsi:Name&gt;&#xd;
						&lt;/bil:ServiceType&gt;&#xd;
						&lt;bil:Rate&gt;0&lt;/bil:Rate&gt;&#xd;
						&lt;bil:TotalPayable&gt;0&lt;/bil:TotalPayable&gt;&#xd;
						&lt;bil:AccountingPeriodTotal&gt;0&lt;/bil:AccountingPeriodTotal&gt;&#xd;
						&lt;bil:CalcExplanation&gt;0&lt;/bil:CalcExplanation&gt;&#xd;
						&lt;!--&lt;bil:orgPPAGUID&gt;?&lt;/bil:orgPPAGUID&gt;&#xd;
						&lt;bil:ServiceCharge&gt;&#xd;
							&lt;bil:MoneyRecalculation&gt;10&lt;/bil:MoneyRecalculation&gt;&#xd;
							&lt;bil:MoneyDiscount&gt;3&lt;/bil:MoneyDiscount&gt;&#xd;
						&lt;/bil:ServiceCharge&gt;&#xd;
						&lt;bil:Consumption&gt;&#xd;
							&lt;bil:Volume type=&quot;I&quot;&gt;55&lt;/bil:Volume&gt;&#xd;
						&lt;/bil:Consumption&gt;--&gt;&#xd;
					&lt;/bil:HousingService&gt;&#xd;
					&lt;!--&lt;bil:AdditionalService&gt;&#xd;
					&lt;bil:ServiceType&gt;&#xd;
					&lt;nsi:Code&gt;?&lt;/nsi:Code&gt;&#xd;
					&lt;nsi:GUID&gt;?&lt;/nsi:GUID&gt;&#xd;
					&lt;nsi:Name&gt;?&lt;/nsi:Name&gt;&#xd;
					&lt;/bil:ServiceType&gt;&#xd;
					&lt;bil:Rate&gt;?&lt;/bil:Rate&gt;&#xd;
					&lt;bil:TotalPayable&gt;?&lt;/bil:TotalPayable&gt;&#xd;
					&lt;bil:AccountingPeriodTotal&gt;?&lt;/bil:AccountingPeriodTotal&gt;&#xd;
					&lt;bil:CalcExplanation&gt;?&lt;/bil:CalcExplanation&gt;&#xd;
					&lt;bil:orgPPAGUID&gt;?&lt;/bil:orgPPAGUID&gt;&#xd;
					&lt;bil:ServiceCharge&gt;&#xd;
					&lt;bil:MoneyRecalculation&gt;?&lt;/bil:MoneyRecalculation&gt;&#xd;
					&lt;bil:MoneyDiscount&gt;?&lt;/bil:MoneyDiscount&gt;&#xd;
					&lt;/bil:ServiceCharge&gt;&#xd;
					&lt;bil:Consumption&gt;&#xd;
					&lt;bil:Volume type=&quot;?&quot;&gt;?&lt;/bil:Volume&gt;&#xd;
					&lt;/bil:Consumption&gt;&#xd;
					&lt;/bil:AdditionalService&gt;&#xd;
					&lt;bil:MunicipalService&gt;&#xd;
					&lt;bil:ServiceType&gt;&#xd;
					&lt;nsi:Code&gt;1.1&lt;/nsi:Code&gt;&#xd;
					&lt;nsi:GUID&gt;353cb8d7-1f10-402f-9164-1b93d1c90ecc&lt;/nsi:GUID&gt;&#xd;
					&lt;nsi:Name&gt;?&lt;/nsi:Name&gt;&#xd;
					&lt;/bil:ServiceType&gt;&#xd;
					&lt;bil:Rate&gt;55&lt;/bil:Rate&gt;&#xd;
					&lt;bil:TotalPayable&gt;150&lt;/bil:TotalPayable&gt;&#xd;
					&lt;bil:AccountingPeriodTotal&gt;33&lt;/bil:AccountingPeriodTotal&gt;&#xd;
					&lt;bil:CalcExplanation&gt;10&lt;/bil:CalcExplanation&gt;&#xd;
					&lt;bil:orgPPAGUID&gt;a598a860-950c-4bd8-9630-1cb5071bb87b&lt;/bil:orgPPAGUID&gt;&#xd;
					&lt;bil:ServiceCharge&gt;&#xd;
					&lt;bil:MoneyRecalculation&gt;10&lt;/bil:MoneyRecalculation&gt;&#xd;
					&lt;bil:MoneyDiscount&gt;22&lt;/bil:MoneyDiscount&gt;&#xd;
					&lt;/bil:ServiceCharge&gt;&#xd;
					&lt;bil:PiecemealPayment&gt;&#xd;
					&lt;bil:paymentPeriodPiecemealPaymentSum&gt;10&lt;/bil:paymentPeriodPiecemealPaymentSum&gt;&#xd;
					&lt;bil:pastPaymentPeriodPiecemealPaymentSum&gt;10&lt;/bil:pastPaymentPeriodPiecemealPaymentSum&gt;&#xd;
					&lt;bil:piecemealPaymentPercentRub&gt;10&lt;/bil:piecemealPaymentPercentRub&gt;&#xd;
					&lt;bil:piecemealPaymentPercent&gt;10&lt;/bil:piecemealPaymentPercent&gt;&#xd;
					&lt;bil:piecemealPaymentSum&gt;10&lt;/bil:piecemealPaymentSum&gt;&#xd;
					&lt;/bil:PiecemealPayment&gt;&#xd;
					&lt;bil:PaymentRecalculation&gt;&#xd;
					&lt;bil:recalculationReason&gt;22&lt;/bil:recalculationReason&gt;&#xd;
					&lt;bil:sum&gt;10&lt;/bil:sum&gt;&#xd;
					&lt;/bil:PaymentRecalculation&gt;&#xd;
					&lt;bil:ServiceInformation&gt;&#xd;
					&lt;bil:individualConsumptionCurrentValue&gt;10&lt;/bil:individualConsumptionCurrentValue&gt;&#xd;
					&lt;bil:houseOverallNeedsCurrentValue&gt;10&lt;/bil:houseOverallNeedsCurrentValue&gt;&#xd;
					&lt;bil:houseTotalIndividualConsumption&gt;10&lt;/bil:houseTotalIndividualConsumption&gt;&#xd;
					&lt;bil:houseTotalHouseOverallNeeds&gt;10&lt;/bil:houseTotalHouseOverallNeeds&gt;&#xd;
					&lt;bil:houseOverallNeedsNorm&gt;10&lt;/bil:houseOverallNeedsNorm&gt;&#xd;
					&lt;bil:individualConsumptionNorm&gt;10&lt;/bil:individualConsumptionNorm&gt;&#xd;
					&lt;/bil:ServiceInformation&gt;&#xd;
					&lt;bil:Consumption&gt;&#xd;
					&lt;bil:Volume type=&quot;I&quot; determiningMethod=&quot;N&quot;&gt;33&lt;/bil:Volume&gt;&#xd;
					&lt;/bil:Consumption&gt;&#xd;
					&lt;bil:MunicipalServiceIndividualConsumptionPayable&gt;10&lt;/bil:MunicipalServiceIndividualConsumptionPayable&gt;&#xd;
					&lt;bil:MunicipalServiceCommunalConsumptionPayable&gt;10&lt;/bil:MunicipalServiceCommunalConsumptionPayable&gt;&#xd;
					&lt;/bil:MunicipalService&gt;--&gt;&#xd;
				&lt;/bil:ChargeInfo&gt;&#xd;
				&lt;!--&lt;bil:CapitalRepairCharge&gt;&#xd;
				&lt;bil:Contribution&gt;?&lt;/bil:Contribution&gt;&#xd;
				&lt;bil:AccountingPeriodTotal&gt;?&lt;/bil:AccountingPeriodTotal&gt;&#xd;
				&lt;bil:MoneyRecalculation&gt;?&lt;/bil:MoneyRecalculation&gt;&#xd;
				&lt;bil:MoneyDiscount&gt;?&lt;/bil:MoneyDiscount&gt;&#xd;
				&lt;bil:TotalPayable&gt;?&lt;/bil:TotalPayable&gt;&#xd;
				&lt;bil:orgPPAGUID&gt;?&lt;/bil:orgPPAGUID&gt;&#xd;
				&lt;/bil:CapitalRepairCharge&gt;&#xd;
				&lt;bil:Insurance&gt;&#xd;
				&lt;bil:InsuranceProductGUID&gt;?&lt;/bil:InsuranceProductGUID&gt;&#xd;
				&lt;bil:Rate&gt;?&lt;/bil:Rate&gt;&#xd;
				&lt;bil:TotalPayable&gt;?&lt;/bil:TotalPayable&gt;&#xd;
				&lt;bil:AccountingPeriodTotal&gt;?&lt;/bil:AccountingPeriodTotal&gt;&#xd;
				&lt;bil:CalcExplanation&gt;?&lt;/bil:CalcExplanation&gt;&#xd;
				&lt;bil:ServiceCharge&gt;&#xd;
				&lt;bil:MoneyRecalculation&gt;?&lt;/bil:MoneyRecalculation&gt;&#xd;
				&lt;bil:MoneyDiscount&gt;?&lt;/bil:MoneyDiscount&gt;&#xd;
				&lt;/bil:ServiceCharge&gt;&#xd;
				&lt;bil:Consumption&gt;&#xd;
				&lt;bil:Volume type=&quot;?&quot;&gt;?&lt;/bil:Volume&gt;&#xd;
				&lt;/bil:Consumption&gt;&#xd;
				&lt;/bil:Insurance&gt;&#xd;
				&lt;bil:CapitalRepairDebt&gt;&#xd;
				&lt;base:Month&gt;?&lt;/base:Month&gt;&#xd;
				&lt;base:Year&gt;?&lt;/base:Year&gt;&#xd;
				&lt;bil:TotalPayable&gt;?&lt;/bil:TotalPayable&gt;&#xd;
				&lt;bil:orgPPAGUID&gt;?&lt;/bil:orgPPAGUID&gt;&#xd;
				&lt;/bil:CapitalRepairDebt&gt;&#xd;
				&lt;bil:ChargeDebt&gt;&#xd;
				&lt;bil:HousingService&gt;&#xd;
				&lt;base:Month&gt;?&lt;/base:Month&gt;&#xd;
				&lt;base:Year&gt;?&lt;/base:Year&gt;&#xd;
				&lt;bil:TotalPayable&gt;?&lt;/bil:TotalPayable&gt;&#xd;
				&lt;bil:orgPPAGUID&gt;?&lt;/bil:orgPPAGUID&gt;&#xd;
				&lt;bil:ServiceType&gt;&#xd;
				&lt;nsi:Code&gt;?&lt;/nsi:Code&gt;&#xd;
				&lt;nsi:GUID&gt;?&lt;/nsi:GUID&gt;&#xd;
				&lt;nsi:Name&gt;?&lt;/nsi:Name&gt;&#xd;
				&lt;/bil:ServiceType&gt;&#xd;
				&lt;/bil:HousingService&gt;&#xd;
				&lt;bil:AdditionalService&gt;&#xd;
				&lt;base:Month&gt;?&lt;/base:Month&gt;&#xd;
				&lt;base:Year&gt;?&lt;/base:Year&gt;&#xd;
				&lt;bil:TotalPayable&gt;?&lt;/bil:TotalPayable&gt;&#xd;
				&lt;bil:orgPPAGUID&gt;?&lt;/bil:orgPPAGUID&gt;&#xd;
				&lt;bil:ServiceType&gt;&#xd;
				&lt;nsi:Code&gt;?&lt;/nsi:Code&gt;&#xd;
				&lt;nsi:GUID&gt;?&lt;/nsi:GUID&gt;&#xd;
				&lt;nsi:Name&gt;?&lt;/nsi:Name&gt;&#xd;
				&lt;/bil:ServiceType&gt;&#xd;
				&lt;/bil:AdditionalService&gt;&#xd;
				&lt;bil:MunicipalService&gt;&#xd;
				&lt;base:Month&gt;?&lt;/base:Month&gt;&#xd;
				&lt;base:Year&gt;?&lt;/base:Year&gt;&#xd;
				&lt;bil:TotalPayable&gt;?&lt;/bil:TotalPayable&gt;&#xd;
				&lt;bil:orgPPAGUID&gt;?&lt;/bil:orgPPAGUID&gt;&#xd;
				&lt;bil:ServiceType&gt;&#xd;
				&lt;nsi:Code&gt;?&lt;/nsi:Code&gt;&#xd;
				&lt;nsi:GUID&gt;?&lt;/nsi:GUID&gt;&#xd;
				&lt;nsi:Name&gt;?&lt;/nsi:Name&gt;&#xd;
				&lt;/bil:ServiceType&gt;&#xd;
				&lt;/bil:MunicipalService&gt;&#xd;
				&lt;/bil:ChargeDebt&gt;--&gt;&#xd;
				&lt;bil:Expose&gt;true&lt;/bil:Expose&gt;&#xd;
				&lt;!--&lt;bil:Withdraw&gt;true&lt;/bil:Withdraw&gt;&#xd;
				&lt;bil:DebtPreviousPeriods&gt;100&lt;/bil:DebtPreviousPeriods&gt;&#xd;
				&lt;bil:AdvanceBllingPeriod&gt;150&lt;/bil:AdvanceBllingPeriod&gt;&#xd;
				&lt;bil:totalPiecemealPaymentSum&gt;350&lt;/bil:totalPiecemealPaymentSum&gt;&#xd;
				&lt;bil:PaymentsTaken&gt;?&lt;/bil:PaymentsTaken&gt;--&gt;&#xd;
				&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
				&lt;!--&lt;bil1:PaymentDocumentID&gt;?&lt;/bil1:PaymentDocumentID&gt;--&gt;&#xd;
				&lt;bil:PaymentInformationKey&gt;${guid}&lt;/bil:PaymentInformationKey&gt;&#xd;
			&lt;/bil:PaymentDocument&gt;&#xd;
			&lt;!--&lt;bil:WithdrawPaymentDocument&gt;&#xd;
			&lt;base:TransportGUID&gt;?&lt;/base:TransportGUID&gt;&#xd;
			&lt;bil1:PaymentDocumentID&gt;?&lt;/bil1:PaymentDocumentID&gt;&#xd;
			&lt;/bil:WithdrawPaymentDocument&gt;--&gt;&#xd;
		&lt;/bil:importPaymentDocumentRequest&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/ext-bus-bills-service/services/Bills</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="SOAPAction" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value"> &quot;urn:importPaymentDocumentData&quot;&#xd;</stringProp>
                </elementProp>
                <elementProp name="X-Client-Cert-Fingerprint" elementType="Header">
                  <stringProp name="Header.name">X-Client-Cert-Fingerprint</stringProp>
                  <stringProp name="Header.value">40ba17ff5335ceade18262cc583dd8c78851fbde</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters">${__UUID}</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">e5d03de1-8788-473e-a803-9096ccf378fe</stringProp>
              <stringProp name="script">vars.put(&quot;guid&quot;,args[0]);</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="286377626">UniqueNumber</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF UC05 account" enabled="true"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_UC05.account" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="TA thinktime" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantIntegration}</stringProp>
              <stringProp name="RandomTimer.range">${randomIntegration}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC05.account.import" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:base=&quot;http://dom.gosuslugi.ru/schema/integration/base/&quot; xmlns:hous=&quot;http://dom.gosuslugi.ru/schema/integration/house-management/&quot; xmlns:xd=&quot;http://www.w3.org/2000/09/xmldsig#&quot; xmlns:nsi=&quot;http://dom.gosuslugi.ru/schema/integration/nsi-base/&quot; xmlns:ind=&quot;http://dom.gosuslugi.ru/schema/integration/individual-registry-base/&quot; xmlns:org=&quot;http://dom.gosuslugi.ru/schema/integration/organizations-registry-base/&quot; xmlns:acc=&quot;http://dom.gosuslugi.ru/schema/integration/account-base/&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;base:RequestHeader&gt;&#xd;
			&lt;base:Date&gt;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss.SXXX)}&lt;/base:Date&gt;&#xd;
			&lt;base:MessageGUID&gt;${__UUID}&lt;/base:MessageGUID&gt;&#xd;
			&lt;!--&lt;base:SenderID&gt;?&lt;/base:SenderID&gt;--&gt;&#xd;
			&lt;base:orgPPAGUID&gt;5bc377ea-1f6f-4473-8af8-e5b130290b3e&lt;/base:orgPPAGUID&gt;&#xd;
			&lt;base:IsOperatorSignature&gt;true&lt;/base:IsOperatorSignature&gt;&#xd;
		&lt;/base:RequestHeader&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;hous:importAccountRequest base:version=&quot;10.0.1.1&quot;&gt;&#xd;
			&lt;hous:Account&gt;&#xd;
				&lt;hous:isUOAccount&gt;true&lt;/hous:isUOAccount&gt;&#xd;
				&lt;!--&lt;hous:isCRAccount&gt;true&lt;/hous:isCRAccount&gt;&#xd;
				&lt;hous:isRCAccount&gt;true&lt;/hous:isRCAccount&gt;&#xd;
				&lt;hous:isOGVorOMSAccount&gt;true&lt;/hous:isOGVorOMSAccount&gt;--&gt;&#xd;
				&lt;hous:CreationDate&gt;2016-01-01T00:00:00.000+00:00&lt;/hous:CreationDate&gt;&#xd;
				&lt;hous:LivingPersonsNumber&gt;1&lt;/hous:LivingPersonsNumber&gt;&#xd;
				&lt;hous:TotalSquare&gt;100&lt;/hous:TotalSquare&gt;&#xd;
				&lt;hous:ResidentialSquare&gt;100&lt;/hous:ResidentialSquare&gt;&#xd;
				&lt;!--&lt;hous:HeatedArea&gt;50&lt;/hous:HeatedArea&gt;--&gt;&#xd;
				&lt;!--&lt;hous:Closed&gt;&#xd;
					&lt;hous:CloseReason&gt;&#xd;
						&lt;nsi:Code&gt;?&lt;/nsi:Code&gt;&#xd;
						&lt;nsi:GUID&gt;?&lt;/nsi:GUID&gt;&#xd;
						&lt;nsi:Name&gt;?&lt;/nsi:Name&gt;&#xd;
					&lt;/hous:CloseReason&gt;&#xd;
					&lt;hous:CloseDate&gt;?&lt;/hous:CloseDate&gt;&#xd;
					&lt;hous:Description&gt;?&lt;/hous:Description&gt;&#xd;
				&lt;/hous:Closed&gt;--&gt;&#xd;
				&lt;hous:Accommodation&gt;&#xd;
					&lt;!--&lt;hous:PremisesGUID&gt;02be7180-0e8f-4ec5-8e46-9b5e3d0309fc&lt;/hous:PremisesGUID&gt;&#xd;
					&lt;hous:FIASHouseGuid&gt;808ee196-e486-43b6-a2eb-b3e3bc1b1748&lt;/hous:FIASHouseGuid&gt;--&gt;&#xd;
					&lt;hous:LivingRoomGUID&gt;${rguid}&lt;/hous:LivingRoomGUID&gt;&#xd;
					&lt;hous:SharePercent&gt;100&lt;/hous:SharePercent&gt;&#xd;
				&lt;/hous:Accommodation&gt;&#xd;
				&lt;hous:PayerInfo&gt;&#xd;
					&lt;!--&lt;hous:IsRenter&gt;true&lt;/hous:IsRenter&gt;--&gt;&#xd;
					&lt;hous:Ind&gt;&#xd;
						&lt;ind:Surname&gt;Тестов&lt;/ind:Surname&gt;&#xd;
						&lt;ind:FirstName&gt;Тест&lt;/ind:FirstName&gt;&#xd;
						&lt;ind:Patronymic&gt;Тестович&lt;/ind:Patronymic&gt;&#xd;
						&lt;hous:Sex&gt;M&lt;/hous:Sex&gt;&#xd;
						&lt;hous:DateOfBirth&gt;2000-01-01&lt;/hous:DateOfBirth&gt;&#xd;
						&lt;ind:SNILS&gt;${__RandomString(11,1234567890)}&lt;/ind:SNILS&gt;&#xd;
						&lt;!--&lt;ind:ID&gt;&#xd;
							&lt;ind:Type&gt;&#xd;
								&lt;nsi:Code&gt;?&lt;/nsi:Code&gt;&#xd;
								&lt;nsi:GUID&gt;?&lt;/nsi:GUID&gt;&#xd;
								&lt;nsi:Name&gt;?&lt;/nsi:Name&gt;&#xd;
							&lt;/ind:Type&gt;&#xd;
							&lt;ind:Series&gt;?&lt;/ind:Series&gt;&#xd;
							&lt;ind:Number&gt;?&lt;/ind:Number&gt;&#xd;
							&lt;ind:IssueDate&gt;?&lt;/ind:IssueDate&gt;&#xd;
						&lt;/ind:ID&gt;--&gt;&#xd;
					&lt;/hous:Ind&gt;&#xd;
					&lt;!--&lt;hous:Org&gt;&#xd;
						&lt;org:orgVersionGUID&gt;?&lt;/org:orgVersionGUID&gt;&#xd;
					&lt;/hous:Org&gt;--&gt;&#xd;
				&lt;/hous:PayerInfo&gt;&#xd;
				&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
				&lt;!--&lt;acc:AccountNumber&gt;Тест-01&lt;/acc:AccountNumber&gt;&#xd;
				&lt;hous:AccountGUID&gt;?&lt;/hous:AccountGUID&gt;--&gt;&#xd;
			&lt;/hous:Account&gt;&#xd;
		&lt;/hous:importAccountRequest&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/ext-bus-home-management-service/services/HomeManagement</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="SOAPAction" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value"> &quot;urn:importAccountData&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Client-Cert-Fingerprint" elementType="Header">
                  <stringProp name="Header.name">X-Client-Cert-Fingerprint</stringProp>
                  <stringProp name="Header.value">40ba17ff5335ceade18262cc583dd8c78851fbde</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">aguid</stringProp>
              <stringProp name="RegexExtractor.regex">:GUID&gt;(.{36})</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">${__UUID}</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="836205444">UnifiedAccountNumber</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF UC06 houseuo" enabled="true"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_UC06.houseuo" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="TA thinktime" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantIntegration}</stringProp>
              <stringProp name="RandomTimer.range">${randomIntegration}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC06.houseuo.import" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:base=&quot;http://dom.gosuslugi.ru/schema/integration/base/&quot; xmlns:hous=&quot;http://dom.gosuslugi.ru/schema/integration/house-management/&quot; xmlns:xd=&quot;http://www.w3.org/2000/09/xmldsig#&quot; xmlns:nsi=&quot;http://dom.gosuslugi.ru/schema/integration/nsi-base/&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;base:RequestHeader&gt;&#xd;
			&lt;base:Date&gt;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss.SXXX)}&lt;/base:Date&gt;&#xd;
			&lt;base:MessageGUID&gt;${__UUID}&lt;/base:MessageGUID&gt;&#xd;
			&lt;!--&lt;base:SenderID&gt;?&lt;/base:SenderID&gt;--&gt;&#xd;
			&lt;base:orgPPAGUID&gt;5bc377ea-1f6f-4473-8af8-e5b130290b3e&lt;/base:orgPPAGUID&gt;&#xd;
			&lt;base:IsOperatorSignature&gt;true&lt;/base:IsOperatorSignature&gt;&#xd;
		&lt;/base:RequestHeader&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;hous:importHouseUORequest base:version=&quot;10.0.1.1&quot;&gt;&#xd;
			&lt;hous:ApartmentHouse&gt;&#xd;
				&lt;hous:ApartmentHouseToCreate&gt;&#xd;
					&lt;hous:BasicCharacteristicts&gt;&#xd;
						&lt;hous:No_RSO_GKN_EGRP_Registered&gt;true&lt;/hous:No_RSO_GKN_EGRP_Registered&gt;&#xd;
						&lt;hous:FIASHouseGuid&gt;${hguid}&lt;/hous:FIASHouseGuid&gt;&#xd;
						&lt;hous:TotalSquare&gt;100&lt;/hous:TotalSquare&gt;&#xd;
						&lt;hous:State&gt;&#xd;
							&lt;nsi:Code&gt;2&lt;/nsi:Code&gt;&#xd;
							&lt;nsi:GUID&gt;2d3ae73e-6c72-4740-9122-9c632d1893a7&lt;/nsi:GUID&gt;&#xd;
							&lt;nsi:Name&gt;Исправный&lt;/nsi:Name&gt;&#xd;
						&lt;/hous:State&gt;&#xd;
						&lt;hous:UsedYear&gt;2016&lt;/hous:UsedYear&gt;&#xd;
						&lt;hous:FloorCount&gt;1&lt;/hous:FloorCount&gt;&#xd;
						&lt;!--&lt;hous:OKTMO&gt;&#xd;
						&lt;base:code&gt;75701000001&lt;/base:code&gt;&#xd;
						&lt;/hous:OKTMO&gt;--&gt;&#xd;
						&lt;hous:OlsonTZ&gt;&#xd;
							&lt;nsi:Code&gt;6&lt;/nsi:Code&gt;&#xd;
							&lt;nsi:GUID&gt;1e05329c-6ff0-4a20-b373-bb57c3592c3b&lt;/nsi:GUID&gt;&#xd;
							&lt;nsi:Name&gt;Екатеринбург&lt;/nsi:Name&gt;&#xd;
						&lt;/hous:OlsonTZ&gt;&#xd;
						&lt;hous:CulturalHeritage&gt;1&lt;/hous:CulturalHeritage&gt;&#xd;
						&lt;!--&lt;hous:OGFData&gt;&#xd;
						&lt;hous:Code&gt;11052&lt;/hous:Code&gt;&#xd;
						&lt;hous:Value&gt;&#xd;
						&lt;hous:StringValue&gt;?&lt;/hous:StringValue&gt;&#xd;
						&lt;hous:FloatValue&gt;?&lt;/hous:FloatValue&gt;&#xd;
						&lt;hous:DateTimeValue&gt;?&lt;/hous:DateTimeValue&gt;&#xd;
						&lt;hous:IntegerValue&gt;?&lt;/hous:IntegerValue&gt;&#xd;
						&lt;hous:BooleanValue&gt;?&lt;/hous:BooleanValue&gt;&#xd;
						&lt;hous:NsiCode&gt;3709&lt;/hous:NsiCode&gt;&#xd;
						&lt;hous:File&gt;?&lt;/hous:File&gt;&#xd;
						&lt;/hous:Value&gt;&#xd;
						&lt;/hous:OGFData&gt;--&gt;&#xd;
					&lt;/hous:BasicCharacteristicts&gt;&#xd;
					&lt;hous:UndergroundFloorCount&gt;1&lt;/hous:UndergroundFloorCount&gt;&#xd;
					&lt;hous:MinFloorCount&gt;9&lt;/hous:MinFloorCount&gt;&#xd;
					&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
				&lt;/hous:ApartmentHouseToCreate&gt;&#xd;
				&lt;hous:NonResidentialPremiseToCreate&gt;&#xd;
					&lt;hous:No_RSO_GKN_EGRP_Registered&gt;true&lt;/hous:No_RSO_GKN_EGRP_Registered&gt;&#xd;
					&lt;hous:PremisesNum&gt;1&lt;/hous:PremisesNum&gt;&#xd;
					&lt;!--&lt;hous:OGFData&gt;&#xd;
					&lt;hous:Code&gt;20053&lt;/hous:Code&gt;&#xd;
					&lt;hous:Value&gt;&#xd;
					&lt;hous:StringValue&gt;?&lt;/hous:StringValue&gt;&#xd;
					&lt;hous:FloatValue&gt;?&lt;/hous:FloatValue&gt;&#xd;
					&lt;hous:DateTimeValue&gt;?&lt;/hous:DateTimeValue&gt;&#xd;
					&lt;hous:IntegerValue&gt;?&lt;/hous:IntegerValue&gt;&#xd;
					&lt;hous:BooleanValue&gt;?&lt;/hous:BooleanValue&gt;&#xd;
					&lt;hous:NsiCode&gt;5184&lt;/hous:NsiCode&gt;&#xd;
					&lt;hous:File&gt;?&lt;/hous:File&gt;&#xd;
					&lt;/hous:Value&gt;&#xd;
					&lt;/hous:OGFData&gt;--&gt;&#xd;
					&lt;hous:TotalArea&gt;50&lt;/hous:TotalArea&gt;&#xd;
					&lt;hous:IsCommonProperty&gt;1&lt;/hous:IsCommonProperty&gt;&#xd;
					&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
				&lt;/hous:NonResidentialPremiseToCreate&gt;&#xd;
				&lt;hous:EntranceToCreate&gt;&#xd;
					&lt;hous:EntranceNum&gt;1&lt;/hous:EntranceNum&gt;&#xd;
					&lt;hous:StoreysCount&gt;9&lt;/hous:StoreysCount&gt;&#xd;
					&lt;hous:CreationDate&gt;2016-01-01&lt;/hous:CreationDate&gt;&#xd;
					&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
				&lt;/hous:EntranceToCreate&gt;&#xd;
				&lt;hous:ResidentialPremises&gt;&#xd;
					&lt;hous:ResidentialPremisesToCreate&gt;&#xd;
						&lt;hous:No_RSO_GKN_EGRP_Registered&gt;true&lt;/hous:No_RSO_GKN_EGRP_Registered&gt;&#xd;
						&lt;hous:PremisesNum&gt;1&lt;/hous:PremisesNum&gt;&#xd;
						&lt;!--&lt;hous:OGFData&gt;&#xd;
						&lt;hous:Code&gt;20002&lt;/hous:Code&gt;&#xd;
						&lt;hous:Value&gt;&#xd;
						&lt;hous:StringValue&gt;?&lt;/hous:StringValue&gt;&#xd;
						&lt;hous:FloatValue&gt;?&lt;/hous:FloatValue&gt;&#xd;
						&lt;hous:DateTimeValue&gt;?&lt;/hous:DateTimeValue&gt;&#xd;
						&lt;hous:IntegerValue&gt;?&lt;/hous:IntegerValue&gt;&#xd;
						&lt;hous:BooleanValue&gt;?&lt;/hous:BooleanValue&gt;&#xd;
						&lt;hous:NsiCode&gt;5085&lt;/hous:NsiCode&gt;&#xd;
						&lt;hous:File&gt;?&lt;/hous:File&gt;&#xd;
						&lt;/hous:Value&gt;&#xd;
						&lt;/hous:OGFData&gt;--&gt;&#xd;
						&lt;hous:EntranceNum&gt;1&lt;/hous:EntranceNum&gt;&#xd;
						&lt;hous:PremisesCharacteristic&gt;&#xd;
							&lt;nsi:Code&gt;2&lt;/nsi:Code&gt;&#xd;
							&lt;nsi:GUID&gt;5b9777f0-b06f-4226-b90c-c906bb091ab0&lt;/nsi:GUID&gt;&#xd;
							&lt;nsi:Name&gt;Квартира коммунального заселения&lt;/nsi:Name&gt;&#xd;
						&lt;/hous:PremisesCharacteristic&gt;&#xd;
						&lt;hous:TotalArea&gt;50&lt;/hous:TotalArea&gt;&#xd;
						&lt;hous:GrossArea&gt;50&lt;/hous:GrossArea&gt;&#xd;
						&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
					&lt;/hous:ResidentialPremisesToCreate&gt;&#xd;
					&lt;hous:LivingRoomToCreate&gt;&#xd;
						&lt;hous:No_RSO_GKN_EGRP_Registered&gt;true&lt;/hous:No_RSO_GKN_EGRP_Registered&gt;&#xd;
						&lt;hous:RoomNumber&gt;1&lt;/hous:RoomNumber&gt;&#xd;
						&lt;hous:Square&gt;50&lt;/hous:Square&gt;&#xd;
						&lt;!--&lt;hous:OGFData&gt;&#xd;
						&lt;hous:Code&gt;20056&lt;/hous:Code&gt;&#xd;
						&lt;hous:Value&gt;&#xd;
						&lt;hous:StringValue&gt;?&lt;/hous:StringValue&gt;&#xd;
						&lt;hous:FloatValue&gt;?&lt;/hous:FloatValue&gt;&#xd;
						&lt;hous:DateTimeValue&gt;?&lt;/hous:DateTimeValue&gt;&#xd;
						&lt;hous:IntegerValue&gt;?&lt;/hous:IntegerValue&gt;&#xd;
						&lt;hous:BooleanValue&gt;?&lt;/hous:BooleanValue&gt;&#xd;
						&lt;hous:NsiCode&gt;5252&lt;/hous:NsiCode&gt;&#xd;
						&lt;hous:File&gt;?&lt;/hous:File&gt;&#xd;
						&lt;/hous:Value&gt;&#xd;
						&lt;/hous:OGFData&gt;--&gt;&#xd;
						&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
					&lt;/hous:LivingRoomToCreate&gt;&#xd;
				&lt;/hous:ResidentialPremises&gt;&#xd;
				&lt;!--&lt;hous:LiftToCreate&gt;&#xd;
				&lt;hous:EntranceNum&gt;1&lt;/hous:EntranceNum&gt;&#xd;
				&lt;hous:FactoryNum&gt;944&lt;/hous:FactoryNum&gt;&#xd;
				&lt;hous:Type&gt;&#xd;
				&lt;nsi:Code&gt;5011&lt;/nsi:Code&gt;&#xd;
				&lt;nsi:GUID&gt;82dd0bbc-7604-4b9b-ae44-4fd25536329f&lt;/nsi:GUID&gt;&#xd;
				&lt;nsi:Name&gt;ѕассажирский&lt;/nsi:Name&gt;&#xd;
				&lt;/hous:Type&gt;&#xd;
				&lt;hous:OperatingLimit&gt;36&lt;/hous:OperatingLimit&gt;&#xd;
				&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
				&lt;/hous:LiftToCreate&gt;--&gt;&#xd;
			&lt;/hous:ApartmentHouse&gt;&#xd;
		&lt;/hous:importHouseUORequest&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/ext-bus-home-management-service/services/HomeManagement</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">POST http://nt01.dom.test.gosuslugi.ru:10082/ext-bus-home-management-service/services/HomeManagement HTTP/1.1</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="SOAPAction" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value"> &quot;urn:importHouseUOData&quot;&#xd;</stringProp>
                </elementProp>
                <elementProp name="X-Client-Cert-Fingerprint" elementType="Header">
                  <stringProp name="Header.name">X-Client-Cert-Fingerprint</stringProp>
                  <stringProp name="Header.value">40ba17ff5335ceade18262cc583dd8c78851fbde</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">rguid</stringProp>
              <stringProp name="RegexExtractor.regex">:GUID&gt;(.{36})</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">${__UUID}</stringProp>
              <stringProp name="RegexExtractor.match_number">4</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1409622466">AppartmentHouseAcceptedParameter</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TF UC07 contract" enabled="true"/>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">data_pool/fias.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_UC07.contract" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="TA thinktime" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantIntegration}</stringProp>
              <stringProp name="RandomTimer.range">${randomIntegration}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC07.contract.upload" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">123 Document.txt 123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/ext-bus-file-store-service/rest/contentmanagement</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">PUT http://api.nt01.dom.test.gosuslugi.ru:10082/ext-bus-file-store-service/rest/contentmanagement HTTP/1.1
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-MD5" elementType="Header">
                  <stringProp name="Header.name">Content-MD5</stringProp>
                  <stringProp name="Header.value"> 2e6fbmspTcMF3MOsM6AbCw==</stringProp>
                </elementProp>
                <elementProp name="X-Upload-OrgPPAGUID" elementType="Header">
                  <stringProp name="Header.name">X-Upload-OrgPPAGUID</stringProp>
                  <stringProp name="Header.value"> 5bc377ea-1f6f-4473-8af8-e5b130290b3e</stringProp>
                </elementProp>
                <elementProp name="X-Upload-Filename" elementType="Header">
                  <stringProp name="Header.name">X-Upload-Filename</stringProp>
                  <stringProp name="Header.value"> test.txt</stringProp>
                </elementProp>
                <elementProp name="X-Client-Cert-Fingerprint" elementType="Header">
                  <stringProp name="Header.name">X-Client-Cert-Fingerprint</stringProp>
                  <stringProp name="Header.value">40ba17ff5335ceade18262cc583dd8c78851fbde</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">fguid</stringProp>
              <stringProp name="RegexExtractor.regex">X-Upload-UploadID: (.{36})</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">${__UUID}</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1168813491">X-Upload-UploadID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC07.contract.import" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:base=&quot;http://dom.gosuslugi.ru/schema/integration/base/&quot; xmlns:hous=&quot;http://dom.gosuslugi.ru/schema/integration/house-management/&quot; xmlns:xd=&quot;http://www.w3.org/2000/09/xmldsig#&quot; xmlns:org=&quot;http://dom.gosuslugi.ru/schema/integration/organizations-registry-base/&quot; xmlns:nsi=&quot;http://dom.gosuslugi.ru/schema/integration/nsi-base/&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;base:RequestHeader&gt;&#xd;
			&lt;base:Date&gt;${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss.SXXX)}&lt;/base:Date&gt;&#xd;
			&lt;base:MessageGUID&gt;${__UUID}&lt;/base:MessageGUID&gt;&#xd;
			&lt;base:orgPPAGUID&gt;5bc377ea-1f6f-4473-8af8-e5b130290b3e&lt;/base:orgPPAGUID&gt;&#xd;
			&lt;base:IsOperatorSignature&gt;true&lt;/base:IsOperatorSignature&gt;&#xd;
		&lt;/base:RequestHeader&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;hous:importContractRequest base:version=&quot;10.0.1.1&quot;&gt;&#xd;
			&lt;hous:Contract&gt;&#xd;
				&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
				&lt;hous:PlacingContract&gt;&#xd;
					&lt;hous:DocNum&gt;${__Random(0,99999999)}&lt;/hous:DocNum&gt;&#xd;
					&lt;hous:SigningDate&gt;2010-01-01&lt;/hous:SigningDate&gt;&#xd;
					&lt;hous:EffectiveDate&gt;2010-01-01&lt;/hous:EffectiveDate&gt;&#xd;
					&lt;hous:PlanDateComptetion&gt;2020-01-01&lt;/hous:PlanDateComptetion&gt;&#xd;
					&lt;hous:Owners&gt;true&lt;/hous:Owners&gt;&#xd;
					&lt;hous:Protocol&gt;&#xd;
						&lt;hous:ProtocolAdd&gt;&#xd;
							&lt;hous:ProtocolMeetingOwners&gt;&#xd;
								&lt;base:Name&gt;test.txt&lt;/base:Name&gt;&#xd;
								&lt;base:Description&gt;test&lt;/base:Description&gt;&#xd;
								&lt;base:Attachment&gt;&#xd;
									&lt;base:AttachmentGUID&gt;${fguid}&lt;/base:AttachmentGUID&gt;&#xd;
								&lt;/base:Attachment&gt;&#xd;
								&lt;base:AttachmentHASH&gt;79790d5f69d83afd0488f53a18080a6875dd8a66ddb1d3c6481293975e15fe50&lt;/base:AttachmentHASH&gt;&#xd;
							&lt;/hous:ProtocolMeetingOwners&gt;&#xd;
						&lt;/hous:ProtocolAdd&gt;&#xd;
					&lt;/hous:Protocol&gt;&#xd;
					&lt;hous:ContractBase&gt;&#xd;
						&lt;nsi:Code&gt;1&lt;/nsi:Code&gt;&#xd;
						&lt;nsi:GUID&gt;110d48b2-32a9-4a44-939c-b784d9794621&lt;/nsi:GUID&gt;&#xd;
						&lt;nsi:Name&gt;Решение собрания собственников&lt;/nsi:Name&gt;&#xd;
					&lt;/hous:ContractBase&gt;&#xd;
					&lt;hous:DateDetails&gt;&#xd;
						&lt;hous:PeriodMetering&gt;&#xd;
							&lt;hous:StartDate&gt;&#xd;
								&lt;hous:Date&gt;1&lt;/hous:Date&gt;&#xd;
								&lt;hous:IsNextMonth&gt;true&lt;/hous:IsNextMonth&gt;&#xd;
							&lt;/hous:StartDate&gt;&#xd;
							&lt;hous:EndDate&gt;&#xd;
								&lt;hous:Date&gt;30&lt;/hous:Date&gt;&#xd;
								&lt;hous:IsNextMonth&gt;true&lt;/hous:IsNextMonth&gt;&#xd;
							&lt;/hous:EndDate&gt;&#xd;
						&lt;/hous:PeriodMetering&gt;&#xd;
						&lt;hous:PaymentDocumentInterval&gt;&#xd;
							&lt;hous:LastDay&gt;true&lt;/hous:LastDay&gt;&#xd;
							&lt;hous:CurrentMounth&gt;true&lt;/hous:CurrentMounth&gt;&#xd;
						&lt;/hous:PaymentDocumentInterval&gt;&#xd;
						&lt;hous:PaymentInterval&gt;&#xd;
							&lt;hous:LastDay&gt;true&lt;/hous:LastDay&gt;&#xd;
							&lt;hous:CurrentMounth&gt;true&lt;/hous:CurrentMounth&gt;&#xd;
						&lt;/hous:PaymentInterval&gt;&#xd;
					&lt;/hous:DateDetails&gt;&#xd;
					&lt;hous:ContractAttachment&gt;&#xd;
						&lt;base:Name&gt;test.txt&lt;/base:Name&gt;&#xd;
						&lt;base:Description&gt;test&lt;/base:Description&gt;&#xd;
						&lt;base:Attachment&gt;&#xd;
							&lt;base:AttachmentGUID&gt;${fguid}&lt;/base:AttachmentGUID&gt;&#xd;
						&lt;/base:Attachment&gt;&#xd;
						&lt;base:AttachmentHASH&gt;79790d5f69d83afd0488f53a18080a6875dd8a66ddb1d3c6481293975e15fe50&lt;/base:AttachmentHASH&gt;&#xd;
					&lt;/hous:ContractAttachment&gt;&#xd;
					&lt;hous:LicenseRequest&gt;true&lt;/hous:LicenseRequest&gt;&#xd;
					&lt;hous:ContractObject&gt;&#xd;
						&lt;hous:FIASHouseGuid&gt;${fias}&lt;/hous:FIASHouseGuid&gt;&#xd;
						&lt;hous:StartDate&gt;2010-01-01&lt;/hous:StartDate&gt;&#xd;
						&lt;hous:EndDate&gt;2020-01-01&lt;/hous:EndDate&gt;&#xd;
						&lt;base:TransportGUID&gt;${__UUID}&lt;/base:TransportGUID&gt;&#xd;
						&lt;hous:BaseMService&gt;&#xd;
							&lt;hous:CurrentDoc&gt;true&lt;/hous:CurrentDoc&gt;&#xd;
						&lt;/hous:BaseMService&gt;&#xd;
					&lt;/hous:ContractObject&gt;&#xd;
				&lt;/hous:PlacingContract&gt;&#xd;
			&lt;/hous:Contract&gt;&#xd;
		&lt;/hous:importContractRequest&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/ext-bus-home-management-service/services/HomeManagement</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">POST http://nt01.dom.test.gosuslugi.ru:10082/ext-bus-home-management-service/services/HomeManagement HTTP/1.1</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="SOAPAction" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value"> &quot;urn:importContractData&quot;&#xd;</stringProp>
                </elementProp>
                <elementProp name="X-Client-Cert-Fingerprint" elementType="Header">
                  <stringProp name="Header.name">X-Client-Cert-Fingerprint</stringProp>
                  <stringProp name="Header.value">40ba17ff5335ceade18262cc583dd8c78851fbde</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">hguid</stringProp>
              <stringProp name="RegexExtractor.regex">FIASHouseGuid&gt;(.{36})</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">${__UUID}</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1238426949">ContractGUID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="UTG Integration" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1293148051">
            <stringProp name="1">1</stringProp>
            <stringProp name="2">0</stringProp>
            <stringProp name="3">1</stringProp>
            <stringProp name="47899024">28798</stringProp>
            <stringProp name="5">1</stringProp>
          </collectionProp>
          <collectionProp name="-230689546">
            <stringProp name="49688">239</stringProp>
            <stringProp name="2">0</stringProp>
            <stringProp name="46852332">14340</stringProp>
            <stringProp name="46851309">14220</stringProp>
            <stringProp name="49710">240</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="TA pacing" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <stringProp name="throughput">${pacingIntegration}</stringProp>
            <intProp name="calcMode">0</intProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC07 contract" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-738180465">TF UC07 contract</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC06 houseuo" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-422688356">TF UC06 houseuo</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC05 account" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-893069554">TF UC05 account</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC03 paymentDocument" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1823268576">TF UC03 paymentDocument</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="JSR223 Listener" enabled="true">
          <stringProp name="cacheKey">f8a134ae-2d12-4372-8ea8-456b96ca34c0</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import org.apache.jmeter.services.FileServer;
String i=vars.get(&quot;cntIntegration&quot;)?:&quot;0&quot;;
String s=props.get(&quot;progdir&quot;);
i=(i.toInteger()+1).toString();
if(i==&quot;17&quot;){
	i=&quot;0&quot;;
	if(!s){
		s=FileServer.getFileServer().getBaseDir();
		props.put(&quot;progdir&quot;,s);
	}
	new File(s+&quot;/results&quot;).mkdir();
	FileOutputStream fos=null;
	while(!fos){fos=new FileOutputStream(s+&quot;/results&quot;+vars.get(&quot;uniq&quot;)+&quot;.&quot;+prev.getResponseCode().substring(0,3)+&quot;.Integration.xml&quot;,true);}
	fos.write((&quot;&lt;s t=\&quot;&quot;+new Date(prev.getStartTime()).format(&quot;yyyy-MM-dd HH:mm:ss&quot;)+&quot;\&quot; c=\&quot;&quot;+prev.getResponseCode()+&quot;\&quot; s=\&quot;&quot;+prev.getSampleLabel()+&quot;\&quot;&gt;\n&lt;!--Request headers:\n&quot;+prev.getRequestHeaders().replace(&quot;--&gt;&quot;,&quot;--!&gt;&quot;)+&quot;--&gt;\n&lt;!--Request body:\n&quot;+prev.getSamplerData().replace(&quot;--&gt;&quot;,&quot;--!&gt;&quot;)+&quot;--&gt;\n&lt;!--Response header:\n&quot;+prev.getResponseHeaders().replace(&quot;--&gt;&quot;,&quot;--!&gt;&quot;)+&quot;--&gt;\n&lt;!--Response body:\n&quot;+prev.getResponseDataAsString().replace(&quot;--&gt;&quot;,&quot;--!&gt;&quot;)+&quot;\n--&gt;\n&lt;/s&gt;\n&quot;).getBytes());
	fos.flush();
	fos.close();
	fos.finalize();
}
vars.put(&quot;cntIntegration&quot;,i);
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Listener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG Debug" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">0</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1478762165000</longProp>
        <longProp name="ThreadGroup.end_time">1478762165000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC07 contract" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-738180465">TF UC07 contract</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC06 houseuo" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-422688356">TF UC06 houseuo</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC05 account" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-893069554">TF UC05 account</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC UC03 paymentDocument" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1823268576">TF UC03 paymentDocument</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>2</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">~/results/${uniq}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="graphiteMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">graphiteMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.graphite.TextGraphiteMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphiteHost" elementType="Argument">
              <stringProp name="Argument.name">graphiteHost</stringProp>
              <stringProp name="Argument.value">172.16.202.28</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="graphitePort" elementType="Argument">
              <stringProp name="Argument.name">graphitePort</stringProp>
              <stringProp name="Argument.value">2003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rootMetricsPrefix" elementType="Argument">
              <stringProp name="Argument.name">rootMetricsPrefix</stringProp>
              <stringProp name="Argument.value">jmeter.${__strReplace(${__TestPlanName},(.+?)\..*,$1,)}.${__strReplace(${__machineName},(.+?)\..*,$1,)}.0.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersList" elementType="Argument">
              <stringProp name="Argument.name">samplersList</stringProp>
              <stringProp name="Argument.value">.+</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="useRegexpForSamplersList" elementType="Argument">
              <stringProp name="Argument.name">useRegexpForSamplersList</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
